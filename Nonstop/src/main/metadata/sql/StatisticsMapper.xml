<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="StatisticsMapper">
 	
	<resultMap id="statisticsSet" type="statistics">
		<result property="techNo" 			column="stat_tech_no" 		jdbcType="NUMERIC"/>
		<result property="techName"			column="tech_name" 				jdbcType="VARCHAR" />
		<result property="demand" 			column="stat_demand" 			jdbcType="NUMERIC" />
		<result property="supply" 			column="stat_supply" 			jdbcType="NUMERIC" />
		<result property="userRate" 		column="stat_user_rate" 	jdbcType="NUMERIC" />
		<result property="techClass" 		column="tech_class" 			jdbcType="NUMERIC" />
		<result property="regdate" 			column="stat_date" 				jdbcType="DATE" />
	</resultMap>
	
	<select	id="getListTechClass" resultMap="statisticsSet">
		SELECT tech_class FROM tech
		GROUP BY tech_class
	</select>
	<select	id="getListTechData" parameterType="int" resultMap="statisticsSet">
		SELECT tech_no AS stat_tech_no,tech_name FROM tech
		WHERE tech_class = #{classValue}
		ORDER BY tech_no
	</select>
	
	<insert id="addStatistics" parameterType="statistics">
		INSERT INTO statistics(stat_no, stat_tech_name, stat_tech_class
												,stat_demand, stat_supply, stat_user_rate)
		VALUES (seq_statisics_stat_no.nextval, #{techName}, #{techClass}
						,#{demand}, #{supply}, #{userRate})
	</insert>
	
	
	<insert id="addListStatisticsData" parameterType="java.util.List">
		<if test="list.size != 0">
			insert into statistics(stat_no,stat_tech_no,stat_demand,stat_supply,stat_user_rate)
			select seq_statisics_stat_no.nextval, inner_view.*
				from (
				<foreach collection="list" item="statistics" separator="UNION ALL">
					select #{statistics.techNo},#{statistics.demand},
								#{statistics.supply},#{statistics.userRate}
					from dual
				</foreach>
			) inner_view
		</if>
	</insert>
	<select id="getListStatisticsData" resultMap="statisticsSet">
		SELECT DISTINCT t.tech_no AS stat_tech_no, demand.stat_demand, supply.stat_supply, user_rate.stat_user_rate
		FROM tech t
			,(
				SELECT DISTINCT pj.proj_annostart,t.tu_tech_no,COUNT(*)OVER(PARTITION BY tu_tech_no) AS stat_demand
				FROM techuse t, project pj
				WHERE t.tu_proj_no IS NOT NULL AND t.tu_proj_no = pj.proj_no
							AND proj_annostart BETWEEN SYSDATE-7 AND SYSDATE
			) demand
			,(
				SELECT DISTINCT t.tu_tech_no,COUNT(*)OVER(PARTITION BY tu_tech_no) AS stat_supply
				FROM techuse t, portfolio pf
				WHERE t.tu_port_no IS NOT NULL AND t.tu_port_no = pf.port_no
							AND NVL(port_update,port_regdate) BETWEEN SYSDATE-7 AND SYSDATE
			) supply
			,(
				SELECT DISTINCT (COUNT(*)OVER(PARTITION BY c.career_tech_no)/u.personal_user_count*100) AS stat_user_rate,
					c.career_tech_no
				FROM career c, (SELECT DISTINCT COUNT(*)OVER() AS personal_user_count 
													FROM users u
													WHERE u.user_role = 2) u
			) user_rate
		WHERE t.tech_no = demand.tu_tech_no(+) 
				AND t.tech_no = supply.tu_tech_no(+) 
				AND t.tech_no = user_rate.career_tech_no(+)
		ORDER BY t.tech_no
	</select>

	<select	id="getListTotalStatistics" resultMap="statisticsSet">
		SELECT DISTINCT stat_tech_no,tech_name,tech_class
					,SUM(stat_demand) AS stat_demand
					,SUM(stat_supply) AS stat_supply
					,ROUND(AVG(stat_user_rate),3) AS stat_user_rate
		FROM statistics s, tech t
		WHERE s.stat_tech_no = t.tech_no
		GROUP BY stat_tech_no,tech_name,tech_class
		ORDER BY stat_tech_no
	</select>
	
	<select	id="getListMajorStatistics" parameterType="int" resultMap="statisticsSet">
	</select>
	
	<select	id="getListPeriodStatistics" parameterType="statistics" resultMap="statisticsSet">
	</select>
	
	<select	id="getListRegionStatistics" parameterType="statistics" resultMap="statisticsSet">
	</select>
	
	<select	id="getListPostCount" resultType="hashmap">
		SELECT * FROM
			(SELECT COUNT(CASE WHEN SUBSTR(port_division,1,1) = 1 THEN 1 END) AS develop
							,COUNT(CASE WHEN SUBSTR(port_division,1,1) = 2 THEN 1 END) AS design
			FROM portfolio) pf
			,(SELECT COUNT(proj_no) project FROM project) pt
	</select>
	
	<select	id="getListUserStatistics" parameterType="String" resultMap="statisticsSet">
		SELECT t.tech_no,t.tech_name,t.tech_class,c.career_use_month FROM tech t,career c
		WHERE t.tech_no = c.career_tech_no AND career_user_id = 'user01'
	</select>
</mapper>